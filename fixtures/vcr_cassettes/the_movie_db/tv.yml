---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/tv/4629?api_key=<API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 23 Aug 2020 01:14:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=3600
      X-Memc:
      - HIT
      X-Memc-Key:
      - 4016f903961c103e272bd86985c2c13f
      X-Memc-Age:
      - '1114'
      X-Memc-Expires:
      - '2486'
      Etag:
      - W/"3353a4fdafa242e195c6237a1f29a702"
      Last-Modified:
      - Sun, 23 Aug 2020 01:14:48 GMT
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f9d4b21c935c23e15cfc47b3d33e44e6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO20-C1
      X-Amz-Cf-Id:
      - 7s-nTgCBrJZTpXdpoXwf33YG5N9aPUcVf8xlu3XfP0cPOYhGxIcK5g==
      Age:
      - '163'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 23 Aug 2020 01:17:31 GMT
recorded_with: VCR 6.0.0
