---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/multi?api_key=<API_KEY>&page=1&query=stargate
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.10.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 11 Jul 2024 04:56:45 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=8278
      X-Memc:
      - HIT
      X-Memc-Key:
      - 1ab0818c438f94604513f38ffbfe48d9
      X-Memc-Age:
      - '17326'
      X-Memc-Expires:
      - '8278'
      Etag:
      - W/"9c14b1a38a983a25b4b80c69c4aa6edb"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 5a47b5b66519af1f8eb0c6ec27f68d54.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - mJblJRRso6Fzzk7uDhjGpOdKFN65qy5oGsUvmIx24L2D4Eq4WZWtwg==
      Age:
      - '191'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 11 Jul 2024 04:59:56 GMT
recorded_with: VCR 6.2.0
