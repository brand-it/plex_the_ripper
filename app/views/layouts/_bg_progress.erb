<div class="bg-processes">
  <%= render ProcessComponent.new worker: ScanPlexWorker do |c| %>
    <%= c.with_body do %>
      <% if ScanPlexWorker.job.active? %>
        <%=
          render(
            ProgressBarComponent.new(
              model: Movie,
              completed: (ScanPlexWorker.job.worker.completed.zero? ? 20 : ScanPlexWorker.job.worker.completed),
              status: :success,
              message: 'scanning plex for movies',
              show_percentage: false
            )
          )
        %>
      <% else %>
        <span>Done! you have a total of <%= pluralize(Video.count, 'video') %> on plex.</span>
      <% end %>
    <% end %>
  <% end %>

  <%= render LoadDiskProcessComponent.new %>
  <%= render ProcessComponent.new worker: UploadWorker do |c| %>
    <%= c.with_body do %>
      <% if UploadWorker.job.active? %>

        <%=
          render(
            ProgressBarComponent.new(
              model: DiskTitle,
              show_percentage: false,
              status: :info,
              message: 'upload in progress'
            )
          )
        %>
      <% else %>
        <span>Nothing is being uploaded to <%= Config::Plex.newest.settings_ftp_host %> </span>
      <% end %>
    <% end %>
  <% end %>
  <% if RipWorker.job && @job != RipWorker.job %>
    <%= render ProcessComponent.new worker: RipWorker do |c| %>
      <% if RipWorker.job.active? %>
        <% c.with_body do %>
          <%=
            render(
              ProgressBarComponent.new(
                model: DiskTitle,
                completed: RipWorker.job.metadata['completed'],
                status: :info,
                message: RipWorker.job.metadata['title']
              )
            )
          %>
        <% end %>
        <% c.with_link { link_to 'View Details', job_path(RipWorker.job) } %>
      <% else %>
        <% c.with_body do %>
          <span>Nothing is being ripped to <%= Config::Plex.newest.settings_ftp_host %> </span>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
</div>
