---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/tv/4629?api_key=<API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.2.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 29 Dec 2020 01:47:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=3600
      X-Memc:
      - HIT
      X-Memc-Key:
      - 7e7da73bbbf90d334a4f01441fd688059fd942fc
      X-Memc-Age:
      - '2211'
      X-Memc-Expires:
      - '1389'
      Etag:
      - W/"01bdf34c0043b4646d675cf65413597d"
      Last-Modified:
      - Tue, 29 Dec 2020 01:47:40 GMT
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 347bc4275e3d5eb6571ed3f540a5cbb4.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - vR0RG_Fm4sSM_VdakaOmj0bsmNBE7CPwTlRrS93u5nm_IxSn6bajPA==
      Age:
      - '823'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 29 Dec 2020 02:01:22 GMT
recorded_with: VCR 6.0.0
