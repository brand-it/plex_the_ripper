---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/tv/4629?api_key=<API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Apr 2021 17:36:59 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=3600
      X-Memc:
      - HIT
      X-Memc-Key:
      - 7e7da73bbbf90d334a4f01441fd688059fd942fc
      X-Memc-Age:
      - '1238'
      X-Memc-Expires:
      - '2362'
      Etag:
      - W/"5a82acce912e8e167529fb53f992e7fd"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 4eef074c708dc507931831218d0d5d48.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - J5mgcmN-xsHxQkqIuLmK5FkgYdD7dk75o06Buw-YJ1uwFvjPkLSacQ==
      Age:
      - '799'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Apr 2021 17:50:18 GMT
recorded_with: VCR 6.0.0
